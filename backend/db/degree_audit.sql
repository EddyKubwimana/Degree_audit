CREATE DATABASE IF NOT EXISTS degree_audit;

USE degree_audit;

CREATE TABLE STUDENT
(
    ID INT PRIMARY KEY AUTO_INCREMENT,
    EMAIL VARCHAR(250) NOT NULL,
    STUDENT_ID INT NOT NULL,
    PASSWORD VARCHAR(250) NOT NULL,
    AUTH_CODE INT,
    STATUS INT DEFAULT 0,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE COURSE
(
    ID INT PRIMARY KEY AUTO_INCREMENT,
    STUDENTID INT NOT NULL,
    NAME VARCHAR(250) NOT NULL,
    GRADE VARCHAR(2),
    UNITS INT,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (STUDENTID) REFERENCES STUDENT(ID)
);


CREATE TABLE Advisors (
    AdvisorID INT AUTO_INCREMENT PRIMARY KEY,
    Name VARCHAR(100) NOT NULL,
    Department VARCHAR(100),
    Email VARCHAR(100) UNIQUE NOT NULL,
    Phone VARCHAR(20),
    OfficeLocation VARCHAR(100)
);


CREATE TABLE Sessions (
    SessionID INT AUTO_INCREMENT PRIMARY KEY,
    AdvisorID INT,
    Date DATE NOT NULL,
    StartTime TIME NOT NULL,
    EndTime TIME NOT NULL,
    IsBooked BOOLEAN DEFAULT FALSE,
    FOREIGN KEY (AdvisorID) REFERENCES Advisors(AdvisorID) ON DELETE CASCADE
);

CREATE TABLE Bookings (
    BookingID INT AUTO_INCREMENT PRIMARY KEY,
    SessionID INT,
    StudentID INT,
    BookingDate DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (SessionID) REFERENCES Sessions(SessionID) ON DELETE CASCADE,
    FOREIGN KEY (StudentID) REFERENCES STUDENT(ID) ON DELETE CASCADE,
    UNIQUE (SessionID)
);









